{
  "Version": "2012-10-17",
  "Statement": [
      {
          "Effect": "Allow",
          "Action": [
              "cloudformation:Describe*",
              "cloudformation:List*",
              "cloudformation:Get*",
              "cloudformation:CreateStack",
              "cloudformation:UpdateStack",
              "cloudformation:DeleteStack"
          ],
          "Resource": "arn:aws:cloudformation:*:*:stack/didomi-challenge-cf-*/*"
      },
      {
          "Effect": "Allow",
          "Action": [
              "cloudformation:ValidateTemplate",
              "cloudformation:Get*",
              "cloudformation:List*"
          ],
          "Resource": "*"
      },
      {
          "Effect": "Allow",
          "Action": [
              "s3:CreateBucket",
              "s3:DeleteBucket",
              "s3:Get*",
              "s3:List*"
          ],
          "Resource": [
              "arn:aws:s3:::didomi-challenge-cf-*"
          ]
      },
      {
          "Effect": "Allow",
          "Action": [
              "s3:*"
          ],
          "Resource": [
              "arn:aws:s3:::didomi-challenge-cf-*"
          ]
      },
      {
          "Effect": "Allow",
          "Action": [
              "logs:DescribeLogGroups"
          ],
          "Resource": "arn:aws:logs:*:*:log-group::log-stream:*"
      },
      {
          "Action": [
              "logs:CreateLogGroup",
              "logs:CreateLogStream",
              "logs:DeleteLogGroup",
              "logs:DeleteLogStream",
              "logs:DescribeLogStreams",
              "logs:FilterLogEvents",
              "logs:PutRetentionPolicy"
          ],
          "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/didomi-serverless-api*:log-stream:*",
          "Effect": "Allow"
      },
      {
          "Effect": "Allow",
          "Action": [
              "iam:GetRole",
              "iam:PassRole",
              "iam:CreateRole",
              "iam:DeleteRole",
              "iam:DetachRolePolicy",
              "iam:PutRolePolicy",
              "iam:AttachRolePolicy",
              "iam:DeleteRolePolicy"
          ],
          "Resource": [
              "arn:aws:iam::*:role/didomi-serverless-api*"
          ]
      },
      {
          "Effect": "Allow",
          "Action": [
              "apigateway:GET",
              "apigateway:PATCH",
              "apigateway:POST",
              "apigateway:PUT",
              "apigateway:DELETE"
          ],
          "Resource": [
              "arn:aws:apigateway:*::/restapis"
          ]
      },
      {
          "Effect": "Allow",
          "Action": [
              "apigateway:GET",
              "apigateway:PATCH",
              "apigateway:POST",
              "apigateway:PUT",
              "apigateway:DELETE"
          ],
          "Resource": [
              "arn:aws:apigateway:*::/restapis/*",
              "arn:aws:apigateway:*::/domainnames/*"
          ]
      },
      {
          "Effect": "Allow",
          "Action": [
              "lambda:GetFunction",
              "lambda:CreateFunction",
              "lambda:DeleteFunction",
              "lambda:UpdateFunctionConfiguration",
              "lambda:UpdateFunctionCode",
              "lambda:ListVersionsByFunction",
              "lambda:PublishVersion",
              "lambda:CreateAlias",
              "lambda:DeleteAlias",
              "lambda:UpdateAlias",
              "lambda:GetFunctionConfiguration",
              "lambda:AddPermission",
              "lambda:RemovePermission",
              "lambda:InvokeFunction"
          ],
          "Resource": [
              "arn:aws:lambda:*:*:function:didomi-serverless-api*"
          ]
      },
      {
          "Effect": "Allow",
          "Action": [
              "ec2:DescribeSecurityGroups",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs"
          ],
          "Resource": [
              "*"
          ]
      },
      {
          "Effect": "Allow",
          "Action": [
              "events:Put*",
              "events:Remove*",
              "events:Delete*",
              "events:Describe*"
          ],
          "Resource": "arn:aws:events:*:*:rule/didomi-serverless-api*"
      },
      {
          "Effect": "Allow",
          "Action": [
              "acm:ListCertificates"
          ],
          "Resource": "*"
      },
      {
          "Effect": "Allow",
          "Action": [
              "cloudfront:UpdateDistribution"
          ],
          "Resource": "*"
      },
      {
          "Effect": "Allow",
          "Action": [
              "route53:ListHostedZones",
              "route53:GetHostedZone",
              "route53:ListResourceRecordSets"
          ],
          "Resource": "*"
      },
      {
          "Effect": "Allow",
          "Action": [
              "route53:ListHostedZones",
              "route53:GetHostedZone",
              "route53:ListResourceRecordSets"
          ],
          "Resource": "*"
      },
      {
          "Effect": "Allow",
          "Action": [
              "iam:CreateServiceLinkedRole"
          ],
          "Resource": "arn:aws:iam::*:role/aws-service-role/ops.apigateway.amazonaws.com/AWSServiceRoleForAPIGateway"
      },
      {
          "Effect": "Allow",
          "Action": [
              "route53:ChangeResourceRecordSets"
          ],
          "Resource": "*"
      }
  ]
}